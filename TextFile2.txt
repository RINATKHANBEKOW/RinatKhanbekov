// human.h
#ifndef HUMAN_H_INCLUDED
#define HUMAN_H_INCLUDED

#include <string>
#include <sstream>

class human {
    public:
        // Конструктор класса human
        human(std::string last_name, std::string name, std::string second_name)
        {
            this->last_name = last_name;
            this->name = name;
            this->second_name = second_name;
        }

        // Получение ФИО человека
        std::string get_full_name()
        {
            std::ostringstream full_name;
            full_name << this->last_name << " "
                << this->name << " "
                << this->second_name;
            return full_name.str();
        }

    private:
        std::string name; // имя
        std::string last_name; // фамилия
        std::string second_name; // отчество
};

#endif // HUMAN_H_INCLUDED

// student.h
#ifndef STUDENT_H_INCLUDED
#define STUDENT_H_INCLUDED

#include "human.h"
#include <string>
#include <vector>

class student : public human {
    public:
        // Конструктор класса Student
        student(
            std::string last_name,
            std::string name,
            std::string second_name,
            std::vector<int> scores
        ) : human(
            last_name,
            name,
            second_name
        ) {
            this->scores = scores;
        }

        // Получение среднего балла студента
        float get_average_score()
        {
            // Общее количество оценок
            unsigned int count_scores = this->scores.size();
            // Сумма всех оценок студента
            unsigned int sum_scores = 0;
            // Средний балл
            float average_score;

            for (unsigned int i = 0; i < count_scores; ++i) {
                sum_scores += this->scores[i];
            }

            average_score = (float) sum_scores / (float) count_scores;
            return average_score;
        }

    private:
        // Оценки студента
        std::vector<int> scores;
};
#endif // STUDENT_H_INCLUDED

// Конструктор класса Student
student(
    std::string last_name,
    std::string name,
    std::string second_name,
    std::vector<int> scores
) : human(
    last_name,
    name,
    second_name
) {
    this->scores = scores;
}

// main.cpp

#include <iostream>
#include <vector>

#include "human.h"
#include "student.h"

int main(int argc, char* argv[])
{

    // Оценки студента
    std::vector<int> scores;

    // Добавление оценок студента в вектор
    scores.push_back(5);
    scores.push_back(3);
    scores.push_back(2);
    scores.push_back(2);
    scores.push_back(5);
    scores.push_back(3);
    scores.push_back(3);
    scores.push_back(3);
    scores.push_back(3);

    // Создание объекта класса student
    student *stud = new student("Петров", "Иван", "Алексеевич", scores);

    // Вывод полного имени студента (используется унаследованный метод класса human)
    std::cout << stud->get_full_name() << std::endl;
    // Вывод среднего балла студента
    std::cout << "Средний балл: " << stud->get_average_score() << std::endl;

    return 0;
}